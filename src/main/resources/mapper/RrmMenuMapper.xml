<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rrm.module.menu.mapper.RrmMenuMapper">

    <select id="selectMenuByItemCodeOrId" resultType="com.rrm.module.menu.domain.vo.RrmMenuVO">
        select m.id,
               m.parent_id,
               m.name,
               m.icon,
               m.sort_order,
               m.visibility,
               m.path,
               m.type,
               m.target,
               m.page_name,
               m.page_cache,
               m.version,
               m.status,
               m.terminal,
               m.net_type,
                <if test="id != null and id != ''">
                (select count(*) from rrm_menu t where m.id = t.parent_id) as childrenCount,
                </if>
               d.entry_name as type_name,
               d2.entry_name as terminalName,
               d3.entry_name as netTypeName
        from rrm_menu m
                 join rrm_dict_entry d on m.type = d.entry_code and d.status = 1 and d.type_code = 'dic_menu_type'
                join rrm_dict_entry d2 on m.terminal = d2.entry_code and d2.status = 1 and d2.type_code = 'dic_terminal'
                join rrm_dict_entry d3 on m.net_type = d3.entry_code and d3.status = 1 and d3.type_code = 'dic_net_type'
        <where>
            <if test="itemCode != null and itemCode != ''">
                and m.item_code = #{itemCode}
            </if>
            <if test="id != null and id != ''">
                and m.id = #{id}
            </if>
        </where>
        order by m.sort_order
    </select>

    <select id="getRoleBindMenuByRoleId" resultType="com.rrm.module.menu.domain.vo.RrmMenuVO">
        select m.id,
        m.parent_id,
        m.name,
        m.icon,
        m.sort_order,
        m.visibility,
        m.path,
        m.type,
        m.target,
        m.page_name,
        m.page_cache,
        m.version,
        m.terminal,
        m.net_type,
        d.entry_name as type_name,
        d2.entry_name as terminalName,
        d3.entry_name as netTypeName
        from rrm_menu m
        join rrm_role_menu b on m.id = b.menu_id
        join rrm_dict_entry d on m.type = d.entry_code and d.status = 1 and d.type_code = 'dic_menu_type'
        join rrm_dict_entry d2 on m.terminal = d2.entry_code and d2.status = 1 and d2.type_code = 'dic_terminal'
        join rrm_dict_entry d3 on m.net_type = d3.entry_code and d3.status = 1 and d3.type_code = 'dic_net_type'
        <where>
            m.status = 1 and b.role_id = #{roleId}
        </where>
        order by m.sort_order
    </select>

    <update id="batchUpdateMenuParent" parameterType="com.rrm.module.menu.dto.RrmMenuMoveDTO">
        update rrm_menu
        <set>
            parent_id = #{dto.parentId},
            updated_by = #{dto.updatedBy},
            updated_at = #{dto.updatedAt}
        </set>
        where id in
        <foreach collection="dto.moveIds" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>
</mapper>